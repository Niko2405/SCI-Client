<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!-- Fonts -->
	<FontFamily x:Key="OpenSansRegular">pack://application:,,,/SCI-Client;component/fonts/OpenSans-Regular.ttf#Open Sans</FontFamily>
	<FontFamily x:Key="OpenSansBold">pack://application:,,,/SCI-Client;component/fonts/OpenSans-Bold.ttf#Open Sans</FontFamily>
	<FontFamily x:Key="OpenSansSemiBold">pack://application:,,,/SCI-Client;component/fonts/OpenSans-SemiBold.ttf#Open Sans</FontFamily>
	<FontFamily x:Key="OpenSansExtraBold">pack://application:,,,/SCI-Client;component/fonts/OpenSans-ExtraBold.ttf#Open Sans</FontFamily>

	<!-- Colors -->
	<Color x:Key="ColorPurple">#5A00AA</Color>
	<Color x:Key="ColorWhite">White</Color>
	<Color x:Key="ColorBlack">Black</Color>

	<!-- Border Colors -->
	<SolidColorBrush x:Key="BrushPurple" Color="{StaticResource ColorPurple}"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushWhite" Color="{StaticResource ColorWhite}"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushBlack" Color="{StaticResource ColorBlack}"></SolidColorBrush>

	<!-- LinearBrushPurple -->
	<LinearGradientBrush x:Key="LinearBrushPurple" StartPoint="0,0.5" EndPoint="1,0.5">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="{StaticResource ColorBlack}" Offset="0.0"></GradientStop>
			<GradientStop Color="{StaticResource ColorPurple}" Offset="0.5"></GradientStop>
			<GradientStop Color="{StaticResource ColorBlack}" Offset="1"></GradientStop>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<!-- LinearBrushWhite -->
	<LinearGradientBrush x:Key="LinearBrushWhite" StartPoint="0,1" EndPoint="0,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="{StaticResource ColorBlack}" Offset="0.0"></GradientStop>
			<GradientStop Color="{StaticResource ColorWhite}" Offset="0.5"></GradientStop>
			<GradientStop Color="{StaticResource ColorBlack}" Offset="1"></GradientStop>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<!-- LinearBrushMenu -->
	<LinearGradientBrush x:Key="LinearBrushMenu" StartPoint="0,1" EndPoint="0,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#242424" Offset="0.0"></GradientStop>
			<GradientStop Color="#333333" Offset="0.5"></GradientStop>
			<GradientStop Color="#242424" Offset="1"></GradientStop>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<!-- ButtonWhite -->
	<Style x:Key="ButtonWhite" TargetType="Button">
		<Setter Property="Foreground" Value="Black"></Setter>
		<Setter Property="Cursor" Value="Hand"></Setter>
		<Setter Property="FontSize" Value="42"></Setter>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansBold}"></Setter>
		<Setter Property="VerticalAlignment" Value="Stretch"></Setter>
		<Setter Property="HorizontalAlignment" Value="Center"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="border" BorderBrush="{StaticResource BrushWhite}" BorderThickness="2" CornerRadius="5" Background="{StaticResource LinearBrushWhite}">
						<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="MainContent"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="White"></Setter>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="Black"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- ButtonPurple -->
	<Style x:Key="ButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FontSize" Value="36"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="border" BorderBrush="{StaticResource BrushPurple}" BorderThickness="2" CornerRadius="5" Background="{StaticResource LinearBrushPurple}">
						<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="MainContent"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="White"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="Black"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Title -->
	<Style x:Key="TitleStyle" TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="32"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Label">
					<Border BorderBrush="{StaticResource BrushPurple}" BorderThickness="2" CornerRadius="5" Background="{StaticResource LinearBrushPurple}">
						<ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="MainContent"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TextBox -->
	<Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="FontSize" Value="28"/>
		<Setter Property="Width" Value="800"/>
		<Setter Property="Height" Value="60"/>
		<Setter Property="CaretBrush" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border x:Name="border" BorderBrush="{StaticResource BrushPurple}" BorderThickness="2" CornerRadius="5" Background="{StaticResource LinearBrushPurple}">
						<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" CanContentScroll="False" VerticalAlignment="Center" Margin="5" Cursor="IBeam"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="White"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPurple}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- PasswordBox -->
	<Style x:Key="PasswordBoxPurple" TargetType="PasswordBox">
		<Setter Property="Foreground" Value="White"></Setter>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansBold}"></Setter>
		<Setter Property="FontSize" Value="28"></Setter>
		<Setter Property="Width" Value="800"></Setter>
		<Setter Property="Height" Value="60"></Setter>
		<Setter Property="CaretBrush" Value="White"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Border x:Name="border" BorderBrush="{StaticResource BrushPurple}" BorderThickness="2" CornerRadius="5" Background="{StaticResource LinearBrushPurple}">
						<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" CanContentScroll="False" VerticalAlignment="Center" Margin="5" Cursor="IBeam"></ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="White"></Setter>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPurple}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
